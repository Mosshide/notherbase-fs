<div id="account" class="invisible content">
    <p id="please-login">Please login to view your account settings.</p>

    <div class="invisible settings">
        <h3>Email:</h3>
        <div class="setting" id="email">
            <p></p>
            <button onclick="accountServices.editEmail()">Change Email</button>
        </div>
        <div class="edit invisible" id="email">
            <input type="email" name="email">
            <button onclick="accountServices.updateEmail()">Update</button>
            <button onclick="accountServices.cancelEmail()">Cancel</button>
        </div>
    
        <hr>
    
        <h3>Username:</h3>
        <div class="setting" id="username">
            <p></p>
            <button onclick="accountServices.editUsername()">Change Username</button>
        </div>
        <div class="edit invisible" id="username">
            <input type="text" name="username">
            <button onclick="accountServices.updateUsername()">Update</button>
            <button onclick="accountServices.cancelUsername()">Cancel</button>
        </div>
    
        <hr>
    
        <h3>Password:</h3>
        <div class="setting" id="password">
            <p>*********</p>
            <p>Visit the Keeper to Change Your Password</p>
        </div>

        <p id="info"></p>
    </div>
</div>

<script>
    class AccountServices {
        constructor() {
            this.$emailSetting = $(".content#account .setting#email");
            this.$email = this.$emailSetting.find("p");
            this.$emailEdit = $(".content#account .edit#email");
            this.$emailInput = this.$emailEdit.find("input");

            this.$usernameSetting = $(".content#account .setting#username");
            this.$username = this.$usernameSetting.find("p");
            this.$usernameEdit = $(".content#account .edit#username");
            this.$usernameInput = this.$usernameEdit.find("input");

            this.$passwordSetting = $(".content#account .setting#password");
            this.$passwordEdit = $(".content#account .edit#password");
            this.$passwordInput = this.$passwordEdit.find("input");

            this.$info = $(".content#account #info");

            <% if (user) { %>
                this.refresh();
            <% } %>
        }

        async refresh() {
            try {
                $.get("/user/basic", (data) => {
                    this.$email.text(data.email);
                    this.$emailInput.val(data.email);
                    this.$username.text(data.username);
                    this.$usernameInput.val(data.username);

                    $(".content#account .settings").removeClass("invisible");
                    $(".content#account #please-login").addClass("invisible");
                });
            } 
            catch(err) {
                this.$info.text(err);
            }
        }

        editEmail() {
            this.$emailSetting.addClass("invisible");
            this.$emailEdit.removeClass("invisible");
        }

        cancelEmail() {
            this.$emailSetting.removeClass("invisible");
            this.$emailEdit.addClass("invisible");
            this.$emailInput.val(this.$email.text());
        }

        async updateEmail() {
            try {
                await $.post("/user/email", { email: this.$emailInput.val() }, (data) => {
                    this.$email.text(this.$emailInput.val());
                    this.cancelEmail();
                    this.$info.text("Email Updated!");
                });
            } 
            catch(err) {
                this.$info.text(err);
            }
        }

        editUsername() {
            this.$usernameSetting.addClass("invisible");
            this.$usernameEdit.removeClass("invisible");
        }

        cancelUsername() {
            this.$usernameSetting.removeClass("invisible");
            this.$usernameEdit.addClass("invisible");
            this.$usernameInput.val(this.$username.text());
        }

        async updateUsername() {
            try {
                await $.post("/user/username", { username: this.$usernameInput.val() }, (data) => {
                    this.$username.text(this.$usernameInput.val());
                    this.cancelUsername();
                    this.$info.text("Username Updated!");
                });
            } 
            catch(err) {
                if (err.status === 401) this.$info.text("Username already taken!");
                else this.$info.text("Server Error");
            }
        }
    }

    let accountServices = new AccountServices();
</script>