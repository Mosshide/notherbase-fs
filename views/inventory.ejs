<div class="inventory content invisible" id="inventory">
    <div id="error">
        Please login to view your inventory.
    </div>

    <div class="item-list">
    </div>
</div>

<script>
    class Inventory {
        constructor() {
            this.$div = $(".inventory");
            this.$list = $(".inventory .item-list");
            this.$search = $(".inventory .search");
            this.$searchResults = $(".search-results");
            this.searchResults = [];
            this.$error = $("#inventory #error");
            this.items = [];

            this.refresh();
        }

        async change(itemName, amount) {
            let change = {
                name: itemName,
                amount: amount
            }

            let response = await commune("updateItemInInventory", change);

            let holding = false;

            for (let i = 0; i < this.items.length; i++) {
                if (this.items[i].name === response.data.name) {
                    this.items[i].amount = response.data.amount;
                    holding = true;

                    if (response.data.amount <= 0) this.items.splice(i, 1);
                }
            }
            
            if (!holding && response.data.amount > 0 && response.data.name) {
                this.items.push(response.data);
            }

            this.render();
        }

        async getData() {
            await $.post("/s", JSON.stringify({ action: "getUserInventory" }), (res) => {
                if (res.status === "success") {
                    this.items = res.data;
    
                    this.clearError();
                }
                else console.log(res);
            });
        }
        
        render() {
            this.$list.empty();
            
            for (let i = 0; i < this.items.length; i++) {
                let $new = this.$list.append(
                    `<div class="item-card">
                        <h5>${this.items[i].name}</h5>
                        <button id="${i}">X</button>
                        <hr>
                        <p>${this.items[i].amount}</p>
                    </div>`
                ).children().last();

                $new.find("button").on("click", this.reduceItem);
            }
        }

        reduceItem = (e) => {
            let which = parseInt(e.currentTarget.id);
                    
            this.change(this.items[which].name, -1);

            this.clearError();
        }
        
        async refresh() {
            await this.getData();
            this.render();
        }
        
        clearError() {
            this.$error.addClass("invisible");
        }

        setError(text) {
            this.$error.text(text);
            this.$error.removeClass("invisible");
        }

        hasItem(itemName, minAmount = 1) {
            for (let i = 0; i < this.items.length; i++) {
                if (this.items[i].item.name === itemName) {
                    if (this.items[i].amount >= minAmount) return true;
                }
            }

            return false;
        }
    }

    let playerInventory = new Inventory();
</script>